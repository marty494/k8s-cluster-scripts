- name: Check if we need to set password on first login
  wait_for:
    timeout: 0
  register: connect_rs
  ignore_unreachable: yes

- name: Change password on initial login
  when: connect_rs is unreachable
  delegate_to: 127.0.0.1
  expect:
    command: sshpass -p {{ default_user_default_pass }} ssh {{ default_user }}@{{ ansible_host }}
    timeout: 60
    responses:
        "Current password:": "{{ default_user_default_pass }}"
        "New password:": "{{ default_user_new_pass }}"
        "Retype new password:": "{{ default_user_new_pass }}"

- name: Add host to known_hosts
  when: connect_rs is unreachable
  delegate_to: 127.0.0.1
  expect:
    command: ssh -oStrictHostKeyChecking=no {{ default_user }}@{{ ansible_host }} sleep 0
    timeout: 5
    responses:
      (?i)password: "{{ default_user_new_pass }}"

- name: Change 'become' pass, to match login password
  connection: local
  set_fact:
    ansible_become_pass: "{{ default_user_new_pass }}"

- name: Copy Ansible server pubkey to remote machine
  when: connect_rs is unreachable
  delegate_to: 127.0.0.1
  become: no
  command: sshpass -p {{ default_user_new_pass }} ssh {{ default_user }}@{{ ansible_host }} "bash -c 'echo {{ pubkey }} > /home/ubuntu/.ssh/authorized_keys'"


- name: Speed up SSH logins # uncomment the SSH line to make logins much quicker
  become: yes
  #become_method: sudo
  lineinfile:
    state: present
    backrefs: yes
    backup: yes
    path: /etc/ssh/sshd_config
    regexp: '^(#UseDNS no)$'
    line: '\1UseDNS no'

- name: Generate SSH keys on the host
  when: connect_rs is unreachable
  openssh_keypair:
    path: /home/ubuntu/.ssh/id_rsa

# FROM THIS POINT IT SHOULD NOT BE NECESSARY TO USE SSHPASS OR PASSWORDS AT ALL
# AT SOME POINT WE NEED TO THINK ABOUT DISABLING PASSWORD-BASED AUTHENTICATION